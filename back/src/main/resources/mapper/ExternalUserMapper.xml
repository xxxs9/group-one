<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.ExternalUserDao">


    <select id="countUser" resultType="java.lang.Integer">
        SELECT count(0) from user;
    </select>
    <resultMap id="euserMap" type="com.heeexy.example.util.model.One2Many">
        <id column="userId" property="userId"></id>
        <result column="uuid" property="uuId"/>
        <result column="unionid" property="unionId"/>
        <result column="username" property="username"/>
        <result column="iconurl" property="iconUrl"/>
        <result column="mobile" property="mobile"/>
        <result column="sex" property="sex"/>
        <result column="fans_offset" property="fansOffset"/>
        <result column="login_time" property="loginTime"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="modify_name" property="modifyName"/>
        <collection property="epermissionList" ofType="String">
            <id column="permissionName" property="permissionName"/>
        </collection>
    </resultMap>
    <!--
        获取用户列表
    -->
    <select id="getUser" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            u.*,
            (SELECT count(0) FROM `user_attention` WHERE u.uuId = `user_attention`.to_user_uuid AND `user_attention`.delete_status='1') fansCount
        FROM
            (
                 SELECT
                     id                                      userId,
                     uuid                                    uuId,
                     username                                username,
                     iconurl                                 iconUrl,
                     sex                                     sex,
                     mobile                                  mobile,
                     fans_offset                             fansOffset,
                     DATE_FORMAT(login_time, '%Y.%m.%d %T')  loginTime,
                     DATE_FORMAT(modify_time, '%Y.%m.%d %T') modifyTime
                 FROM example.user
                    <where>
                        <if test="querykey != null and querykey != '' ">
                            username LIKE concat('%',#{querykey},'%')
                        </if>
                        <if test="beforeDate != null and beforeDate != '' and afterDate !=null and afterDate !=''">
                            AND DATE(login_time) between #{beforeDate} and #{afterDate}
                        </if>
                    </where>
                 ORDER BY id
                <if test="offSet != null and offSet != '' and pageRow != null and pageRow != '' ">
                    LIMIT #{offSet}, #{pageRow}
                </if>
             ) u
    </select>
    <!--
        添加用户
    -->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="uuId">
        INSERT INTO
            user(uuid,unionid,username,iconurl,mobile,sex)
            VALUES
            (#{uuId},#{unionId},#{username},#{iconUrl},#{mobile},#{sex})
    </insert>
    <!--
        添加游客
    -->
    <insert id="addTourist" useGeneratedKeys="true" keyProperty="uuId">
        INSERT INTO
            user(uuid,username,iconurl,mobile,sex)
            VALUES
            (#{uuId},#{username},#{iconUrl},#{mobile},#{sex})
    </insert>

    <!--
        修改粉丝偏移量
    -->
    <update id="updateFansOffset">
        UPDATE user
        SET fans_offset = #{fansOffset}
        WHERE uuid = #{uuId}
    </update>

    <!--
        获取用户信息和对应的权限
    -->
    <select id="getUserPermission" resultMap="euserMap">
        SELECT
            u.*,
            p.permission_name                               permissionName

        FROM
            (
                 SELECT
                     id                                      userId,
                     uuid                                    uuId,
                     username                                username
                 FROM example.user
                    <where>
                        <if test="querykey != null and querykey != '' ">
                            username LIKE concat('%',#{querykey},'%')
                        </if>

                        AND unionid IS NOT NULL
                    </where>
                 ORDER BY id
                 LIMIT #{offSet}, #{pageRow}
             ) u
             LEFT JOIN user_permission up ON u.uuid = up.user_uuid AND up.delete_status='1'
             LEFT JOIN permission p ON p.id = up.permission_id

    </select>

    <!--修改用户当前的权限-->
    <update id="updatePermission">
        UPDATE user_permission
        SET delete_status = '2'
        WHERE user_uuid = #{uuId}
        AND permission_id not in (
        <foreach collection="epermissions" item="item" index="index" separator=",">
            #{item.permId}
        </foreach>
        )
    </update>
    <update id="updatePermission2">
        UPDATE user_permission
        SET delete_status = '1'
        WHERE user_uuid = #{uuId}
        AND permission_id in (
        <foreach collection="epermissions" item="item" index="index" separator=",">
            #{item.permId}
        </foreach>
        )

    </update>



    <!--添加权限-->
    <insert id="addPermission">
        INSERT INTO user_permission(user_uuid, permission_id)
        VALUES
        <foreach collection="epermissions" item="item" index="index" separator=",">
            (#{uuId}, #{item.permId})
        </foreach>
    </insert>
    <!--<insert id="addAllPermission" >-->
        <!--INSERT INTO user_permission(user_uuid, permission_id)-->
        <!--VALUES (#{userId},)-->
    <!--</insert>-->

    <update id="refreshPermissionStatus" parameterType="java.lang.Integer">
        UPDATE user_permission
        SET delete_status = '1'
        WHERE delete_status = '2'
        AND user_uuid = #{uuId}
    </update>
    <!--移除用户所有权限-->
    <update id="removeUserAllPermission">
        UPDATE user_permission
        SET delete_status = '2'
        WHERE user_uuid = #{uuId}
        AND delete_status = '1'
    </update>

    <!--查询该用户是否存在-->
    <select id="queryExistUUID" resultType="int">
        SELECT count(0)
        FROM user
        WHERE uuid=#{uuId}
    </select>

    <!--通过权限名获取权限id-->
    <select id="getPermIdByName" resultType="com.alibaba.fastjson.JSONObject">
        SELECT id
        FROM permission
        WHERE permission_name in (
        <foreach collection="epermissionList" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <!--根据uuId查询用户-->
    <select id="findUserById" resultType="com.alibaba.fastjson.JSONObject">
        SELECT u.*
        FROM
        (
        SELECT
        id                                      userId,
        uuid                                    uuId,
        username                                username,
        iconurl                                 iconUrl,
        sex                                     sex,
        mobile                                  mobile,
        fans_offset                             fansOffset,
        DATE_FORMAT(login_time, '%Y.%m.%d %T')  loginTime,
        DATE_FORMAT(modify_time, '%Y.%m.%d %T') modifyTime
        FROM example.user
        WHERE uuid = #{uuId}
        ) u
    </select>

    <!--获取用户的粉丝用户ID-->
    <select id="getFansUUIDByUUID" resultType="com.alibaba.fastjson.JSONObject">
            SELECT
            from_user_uuid
            FROM example.user u,user_attention ua
            WHERE u.uuid = ua.to_user_uuid AND u.uuid = #{uuId} AND ua.delete_status = '1'
    </select>

    <!--统计有效用户用户数-->
    <select id="countByUnionId" resultType="java.lang.Integer">
        SELECT count(0) from user where unionid is not null;

    </select>

    <!--获取所有权限信息-->
    <select id="getPerm" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        p.id                        permId,
        p.permission_code           permCode,
        p.permission_name           permName
        FROM permission p

    </select>

    <!--根据UUID获取用户的有效权限-->
    <select id="getPermByUUID" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        permission_id            permId
        FROM user_permission
        WHERE delete_status = '1' and user_uuid = #{uuId}
    </select>

    <!--根据UUID获取该用户所发的帖子id-->
    <select id="getPostByUUID" resultType="com.alibaba.fastjson.JSONObject">
          select
          post_id           postId
          from post_table
          where post_owner_id = #{uuId}

    </select>

    <!--获取用户关注的用户uuid-->
    <select id="getMyIdolId" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        to_user_uuid               idolId
        FROM user_attention
        WHERE from_user_uuid = #{uuId} AND ua.delete_status = '1'
    </select>
    <!--统计用户发的帖子数-->
    <select id="countPostByUUID" resultType="java.lang.Integer">
        SELECT
        count(0)       postCount
        FROM
        post_table
        WHERE post_owner_id = #{uuId}
    </select>
    <!--获取用户点赞过的帖子id-->
    <select id="getPostIdByLike" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        post_id        postId
        FROM click_goods
        WHERE user_id = #{uuId}
    </select>
    <!--根据uuId查询用户头像-->
    <select id="findIconById" resultType="com.alibaba.fastjson.JSONObject">
        SELECT iconurl iconUrl,username username FROM user where uuid = #{uuId}
    </select>

    <!--统计用户点赞过的帖子数量-->
    <select id="countGoodByUUID" resultType="java.lang.Integer">
        SELECT count(post_id)
        FROM click_goods
        WHERE user_id = #{uuId}
    </select>
    <select id="ddd">
--         SELECT
--         p.*,
--         (SELECT categories_name FROM post_categories pc WHERE p.postId = pc.categories_id) categoriesName,
--         (SELECT count(0) FROM click_goods WHERE click_goods.post_id = p.postId)            likeCount
--         FROM
--         (
--           SELECT
--           post_id                                                                 postId,
--           post_owner_id                                                           uuId,
--           post_text                                                               postText,
--           post_time                                                               postTime,
--           post_phone                                                              postPhone,
--           post_address                                                            postAddress
--           FROM post_table
--           WHERE post_owner_id = #{uuId}
--         ) p
    </select>


</mapper>