<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.PostDao">

    <!--列表返回Map-->
    <resultMap id="postMap" type="com.heeexy.example.util.model.One2Many">
        <id column="postId" property="postId"/>
        <result column="postType" property="postType" />
        <result column="postTypeId" property="postTypeId" />
        <result column="postOwnerName" property="postOwnerName" />
        <result column="postText" property="postText" />
        <result column="postTime" property="postTime" />
        <result column="likeCount" property="likeCount"/>
        <result column="likeOffset" property="likeOffset"/>
        <result column="postAddress" property="postAddress"/>
        <result column="postPhone" property="postPhone"/>
        <result column="browseCount" property="browseCount"/>
        <result column="browseOffset" property="browseOffset"/>
        <result column="postState" property="postState" />
        <collection property="postTagList" ofType="String">
            <id column="postTagName" property="postTagName"/>
        </collection>
        <collection property="postImgList" ofType="String">
            <id column="postImageSrc" property="postImageSrc"></id>
        </collection>
    </resultMap>

    <!--帖子列表-->
    <select id="listPost" resultMap="postMap" >
        SELECT
        p.*,
        (SELECT count(0) FROM click_goods WHERE click_goods.post_id = p.postId)                likeCount,
        (SELECT count(0) FROM browse_records br WHERE br.post_id = p.postId)                   browseCount,
        (SELECT username FROM `user` u WHERE u.uuid = p.postOwnerId)                           postOwnerName,
        (SELECT tag_name FROM tag t WHERE t.tag_id = pt2.tag_id)                               postTagName,
        (SELECT categories_name FROM post_categories pc WHERE pc.categories_id = p.postTypeId) postType,
        post_image.post_image_src                                                              postImageSrc
        FROM(
            SELECT
            post_id                               postId,
            post_type_id                          postTypeId,
            post_owner_id                         postOwnerId,
            post_text                             postText,
            post_phone                            postPhone,
            post_address                          postAddress,
            DATE_FORMAT(post_time, '%Y.%m.%d %T') postTime,
            like_offset                           likeOffset,
            browse_offset                         browseOffset,
            post_state                            postState
        FROM post_table
        <where>
            <if test="queryText != null and queryText != '' ">
                post_text LIKE concat('%',#{queryText},'%')
            </if>
            <if test="beforeDate != null and beforeDate != '' and afterDate !=null and afterDate !=''">
                and DATE(post_time) between #{beforeDate} and #{afterDate}
            </if>
            <if test="postOwnerId != null and postOwnerId.size()>0 ">
                and
                <foreach collection="postOwnerId" item="id" open="post_owner_id in(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="queryPostTypeId != null and queryPostTypeId != '' ">
                and post_type_id = #{queryPostTypeId}
            </if>
            <if test="postIdList != null and postIdList.size()>0 ">
                and
                <foreach collection="postIdList" item="id" open="post_id in(" close=")" separator=",">
                    #{id.postId}
                </foreach>
            </if>
        </where>
        ORDER BY post_id
        LIMIT #{offSet}, #{pageRow}
        ) p
        LEFT JOIN post_tag pt2 ON pt2.post_id = p.postId
        LEFT JOIN post_image ON post_image.post_id = p.postId
        ORDER BY p.postState
    </select>

    <!--修改点赞偏移量-->
    <update id="updateLikeOffset">
        UPDATE post_table
        SET
          like_offset = #{likeOffset}
        WHERE post_id = #{postId}
    </update>

    <!--修改浏览偏移量-->
    <update id="updateBrowseOffset">
        UPDATE post_table
        SET
          browse_offset = #{browseOffset}
        WHERE post_id = #{postId}
    </update>

    <!--删除帖子-->
    <update id="updatePostState">
        UPDATE post_table
        SET
         post_state = #{postState}
        WHERE post_id = #{postId}
    </update>

    <!--修改帖子内容-->
    <update id="updatePost">
        UPDATE post_table
        SET
          post_text = #{postText}, post_type_id = #{postTypeId}, post_phone = #{postPhone}, post_address = #{postAddress}
        WHERE post_id = #{postId}
    </update>

    <!--统计数据总数-->
    <select id="countUser" resultType="java.lang.Integer">
        SELECT count(0)
        FROM post_table p
        WHERE p.post_state = '0'
    </select>

    <!--帖子详情Map-->
    <resultMap id="postDetailMap" type="com.heeexy.example.util.model.One2Many">
        <id column="postId" property="postId"/>
        <result column="postPhone" property="postPhone"></result>
        <result column="postAddress" property="postAddress"></result>
        <result column="priceFloor" property="priceFloor"></result>
        <result column="postText" property="postText"></result>
        <result column="postTime" property="postTime" />
        <result column="browseOffset" property="browseOffset"/>
        <result column="likeOffset" property="likeOffset"/>
        <result column="postType" property="postType" />
        <result column="postOwnerId" property="postOwnerId"></result>
        <result column="priceTop" property="priceTop"></result>
        <collection property="postImgList" ofType="String">
            <id column="postImageSrc" property="postImageSrc"></id>
        </collection>
        <collection property="postTagList" ofType="String">
            <id column="postTagName" property="postTagName"/>
        </collection>
    </resultMap>

    <!--根据帖子ID返回帖子详情-->
    <select id="queryPostById" resultMap="postDetailMap">
        SELECT
          p.*,
          pi.post_image_src             postImageSrc,
          (SELECT categories_name FROM post_categories pc WHERE pc.categories_id = p.postTypeId) postType,
          (SELECT tag_name FROM tag t WHERE t.tag_id = pt2.tag_id)                               postTagName
          FROM (
            SELECT
                post_id                 postId,
                post_text               postText,
                post_owner_id           postOwnerId,
                post_phone              postPhone,
                DATE_FORMAT(post_time, '%Y.%m.%d %T') postTime,
                like_offset             likeOffset,
                browse_offset           browseOffset,
                post_type_id            postTypeId,
                post_address            postAddress,
                price_floor             priceFloor,
                price_top               priceTop
            FROM
              post_table
            WHERE post_id = #{postId}
          ) p
          LEFT JOIN post_image pi ON pi.post_id = p.postId
          LEFT JOIN comment c ON c.post_id = p.postId
          LEFT JOIN post_tag pt2 ON pt2.post_id = p.postId
    </select>

    <!--根据帖子查找ID-->
    <select id="listPostImg" resultType="com.alibaba.fastjson.JSONObject">
      SELECT
        post_image_id postImageId,post_image_src postImageSrc
      FROM post_image
      WHERE
        post_id = #{postId}
    </select>

    <!--根据图片Id删除图片-->
    <delete id="deleteImgById">
      DELETE
      FROM post_image
      WHERE post_image_id = #{postImageId}
    </delete>

    <!--删除帖子对应的标签-->
    <delete id="deletePostTag">
      DELETE
      FROM post_tag
      WHERE post_id = #{postId} AND tag_id = #{tagId.tagId}
    </delete>

    <!--添加对应帖子的图片-->
    <insert id="addPostImg">
      INSERT INTO post_image
         (post_id, post_image_src)
      VALUES
        (#{postId},#{postImageSrc})
    </insert>

    <!--添加帖子标签-->
    <insert id="addPostTag">
      INSERT INTO post_tag
        (post_id, tag_id, parent_id)
      VALUES
        (#{postId},#{tagId},#{parentId})
    </insert>

    <!--返回帖子ID数组-->
    <select id="listPostIdByTag" resultType="com.alibaba.fastjson.JSONObject">
      SELECT
        distinct post_id postId
      FROM post_tag
      <where>
          <if test="queryPostTagId != null ">
              <foreach collection="queryPostTagId" item="id" open="tag_id in(" close=")" separator=",">
                  #{id}
              </foreach>
          </if>
      </where>

    </select>

    <!--根据帖子ID查找标签-->
    <select id="listTagByPostId" resultType="com.alibaba.fastjson.JSONObject">
      SELECT
        tag_name tagName
      from tag
      WHERE tag_id in (SELECT tag_id FROM post_tag WHERE post_id = #{postId})
    </select>

    <!--根据标签ID和帖子ID 查询帖子标签表-->
    <select id="getTagById" resultType="com.alibaba.fastjson.JSONObject">
      SELECT
        post_tag_id,post_id,tag_id,parent_id
      FROM post_tag
      WHERE post_id = #{postId} AND tag_id = #{tagId}
    </select>

    <!--前台列表返回Map-->
    <resultMap id="postMapApi" type="com.heeexy.example.util.model.One2Many">
        <id column="postId" property="postId"/>
        <result column="postType" property="postType" />
        <result column="postTypeId" property="postTypeId" />
        <result column="postOwnerId" property="postOwnerId" />
        <result column="postText" property="postText" />
        <result column="postTime" property="postTime" />
        <result column="browseOffset" property="browseOffset"/>
        <result column="postAddress" property="postAddress"/>
        <result column="postPhone" property="postPhone"/>
        <result column="postState" property="postState" />
        <result column="priceTop" property="priceTop" />
        <result column="priceFloor" property="priceFloor" />
        <collection property="postImgList" ofType="String">
            <id column="postImageSrc" property="postImageSrc"></id>
        </collection>
    </resultMap>
    <!--返回前台帖子列表-->
    <select id="getPostListApi" resultMap="postMapApi">
        SELECT
          p.*,
          pi.post_image_src             postImageSrc,
          (SELECT categories_name FROM post_categories pc WHERE pc.categories_id = p.postTypeId) postType
          FROM (
            SELECT
                post_id                 postId,
                post_text               postText,
                post_owner_id           postOwnerId,
                post_type_id            postTypeId,
                DATE_FORMAT(post_time, '%Y.%m.%d %T') postTime,
                browse_offset           browseOffset,
                post_address            postAddress,
                price_floor             priceFloor,
                price_top               priceTop
            FROM
              post_table
            <where>
              post_state = '0'
                <if test="postIdList != null and postIdList.size() > 0">
                    AND
                    <foreach collection="postIdList" item="id" open="post_id in(" close=")" separator=",">
                        #{id.postId}
                    </foreach>
                </if>
            </where>
              ORDER BY post_time DESC
          ) p
          LEFT JOIN post_image pi ON pi.post_id = p.postId
    </select>

</mapper>